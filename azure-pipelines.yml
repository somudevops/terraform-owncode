# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- none

pool:
  vmImage: 'Self Hosted Agent' #Testing with self-hosted agent

steps:
- task: charleszipp.azure-pipelines-tasks-terraform.azure-pipelines-tasks-terraform-installer.TerraformInstaller@0
  displayName: 'Use Terraform latest'

- task: TerraformTaskV2@2
  displayName: 'terraform-init'
  inputs:
    provider: 'azurerm'
    command: 'init'
    workingDirectory: '$(System.DefaultWorkingDirectory)/terraform'
    backendServiceArm: 'MANI''s AZURE (12c0d075-059f-4523-8432-5eee63b9ac55)'
    backendAzureRmResourceGroupName: 'mani_RG'
    backendAzureRmStorageAccountName: 'manistrg1501'
    backendAzureRmContainerName: 'mani-container'
    backendAzureRmKey: 'manikey'

- task: TerraformTaskV2@2
  displayName: 'terraform-validate'
  inputs:
    provider: 'azurerm'
    command: 'validate'
    workingDirectory: '$(System.DefaultWorkingDirectory)/terraform'

- task: TerraformTaskV2@2
  displayName: 'terraform-plan'
  inputs:
    provider: 'azurerm'
    command: 'plan'
    workingDirectory: '$(System.DefaultWorkingDirectory)/terraform'
    environmentServiceNameAzureRM: 'MANI''s AZURE (12c0d075-059f-4523-8432-5eee63b9ac55)'

- task: TerraformTaskV2@2
  displayName: 'terraform-apply'
  inputs:
    provider: 'azurerm'
    command: 'apply'
    workingDirectory: '$(System.DefaultWorkingDirectory)/apply'
    environmentServiceNameAzureRM: 'MANI''s AZURE (12c0d075-059f-4523-8432-5eee63b9ac55)'